{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport { React, Component } from 'react';\nimport './User.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Countries() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\xDClkeler\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Countries;\nexport class Users extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      refreshData: false,\n      data: {},\n      showList: false\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"geldi\")\n    this.getData();\n  } // componentWillUnmount() {\n  //   alert(\"gelecek\")\n  // }\n\n\n  componentDidUpdate() {\n    this.state.refreshData; //console.log(\"geldi\")\n    //this.getData();\n  }\n\n  getData() {\n    fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                {users{\n                    name\n                    users{\n                        name {\n                        title\n                        first\n                        last\n                        }\n                        gender\n                        email\n                    }\n                }}\n            `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => res.json()).then(result => {\n      //console.log(result);\n      this.setState({\n        data: result.data,\n        refreshData: false,\n        showList: true\n      });\n    });\n  }\n\n  render() {\n    const refreshData = e => {\n      this.setState({\n        refreshData: true\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"users\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-10\",\n              children: this.state.showList ? /*#__PURE__*/_jsxDEV(Countries, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                value: \"Refresh\",\n                onClick: refreshData,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","Component","Countries","Users","state","refreshData","data","showList","componentDidMount","getData","componentDidUpdate","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","res","json","result","setState","render","e"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAO,sCAAP,C,CACA;;;;AAGA,SAASC,SAAT,GAAqB;AACjB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQA,S;AAUT,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SACnCG,KADmC,GAC3B;AACNC,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAD2B;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKC,OAAL;AACD,GAVkC,CAYnC;AACA;AACA;;;AAEAC,EAAAA,kBAAkB,GAAG;AACnB,SAAKN,KAAL,CAAWC,WAAX,CADmB,CAEnB;AACA;AACD;;AAEDI,EAAAA,OAAO,GAAG;AACRE,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0B;AAKnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAd6B;AAenBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADI;AAfQ,OAAf;AAL6B,KAAlC,CAAL,CAyBKC,IAzBL,CAyBWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAzBnB,EA0BKF,IA1BL,CA0BWG,MAAD,IAAY;AACd;AACA,WAAKC,QAAL,CAAc;AACZpB,QAAAA,IAAI,EAAGmB,MAAM,CAACnB,IADF;AAEZD,QAAAA,WAAW,EAAC,KAFA;AAGZE,QAAAA,QAAQ,EAAC;AAHG,OAAd;AAKL,KAjCH;AAkCD;;AAEDoB,EAAAA,MAAM,GAAG;AAEP,UAAMtB,WAAW,GAAEuB,CAAD,IAAO;AACvB,WAAKF,QAAL,CAAc;AAACrB,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KAFD;;AAIA,wBACE;AAAA,6BACE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,wBACI,KAAKD,KAAL,CAAWG,QAAX,gBAAsB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,sBAAtB,GAAqC;AADzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,OAAO,EAAEF,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAqBE;;AAtF+B;AAyFrC,eAAeF,KAAf","sourcesContent":["import {React,Component} from 'react'\r\nimport './User.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import $ from 'jquery';\r\n\r\n\r\nfunction Countries() {\r\n    return (\r\n        <div>\r\n            Ãœlkeler\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport class Users extends Component {\r\n  state = {\r\n    refreshData: false,\r\n    data: {},\r\n    showList: false,    \r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(\"geldi\")\r\n    this.getData();\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   alert(\"gelecek\")\r\n  // }\r\n\r\n  componentDidUpdate() {\r\n    this.state.refreshData\r\n    //console.log(\"geldi\")\r\n    //this.getData();\r\n  }\r\n  \r\n  getData() {\r\n    fetch('http://localhost:8888/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: `\r\n                {users{\r\n                    name\r\n                    users{\r\n                        name {\r\n                        title\r\n                        first\r\n                        last\r\n                        }\r\n                        gender\r\n                        email\r\n                    }\r\n                }}\r\n            `,\r\n          variables: {\r\n            now: new Date().toISOString(),\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n            //console.log(result);\r\n            this.setState({\r\n              data : result.data,\r\n              refreshData:false,\r\n              showList:true\r\n            }) \r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const refreshData=(e) => {\r\n      this.setState({refreshData: true})\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <header id=\"users\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-10\">\r\n                { this.state.showList ? <Countries/> : null }\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <button\r\n                  type=\"submit\" \r\n                  value=\"Refresh\"\r\n                  onClick={refreshData}\r\n                >\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    )}\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}