{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport createReactClass from 'create-react-class'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Helper = {\n  GetData: () => {\n    fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n              {users{\n                  name\n                  users{\n                      name {\n                      title\n                      first\n                      last\n                      }\n                      gender\n                      email\n                  }\n              }}\n          `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.Data = result;\n      return true; //this.setState({data : result.data}) \n    });\n    return false;\n  },\n  Data: [{\n    \"_id\": {\n      \"$oid\": \"625afe081f03fb9ec79f3567\"\n    },\n    \"gender\": \"female\",\n    \"name\": {\n      \"title\": \"Miss\",\n      \"first\": \"Bernhardine\",\n      \"last\": \"Menne\"\n    },\n    \"location\": {\n      \"street\": {\n        \"number\": 1500,\n        \"name\": \"Dorfstraße\"\n      },\n      \"city\": \"Aachen\",\n      \"state\": \"Rheinland-Pfalz\",\n      \"country\": \"Germany\",\n      \"postcode\": 98778,\n      \"coordinates\": {\n        \"latitude\": \"-40.6541\",\n        \"longitude\": \"78.9820\"\n      },\n      \"timezone\": {\n        \"offset\": \"-8:00\",\n        \"description\": \"Pacific Time (US & Canada)\"\n      }\n    },\n    \"email\": \"bernhardine.menne@example.com\"\n  }, {\n    \"_id\": {\n      \"$oid\": \"625b036cd96d3d6a150ff773\"\n    },\n    \"gender\": \"male\",\n    \"name\": {\n      \"title\": \"Mr\",\n      \"first\": \"Aryan\",\n      \"last\": \"Reiten\"\n    },\n    \"location\": {\n      \"street\": {\n        \"number\": 6243,\n        \"name\": \"Leirskallhellinga\"\n      },\n      \"city\": \"Ottersøy\",\n      \"state\": \"Nord-Trøndelag\",\n      \"country\": \"Norway\",\n      \"postcode\": \"7098\",\n      \"coordinates\": {\n        \"latitude\": \"51.0653\",\n        \"longitude\": \"-132.4738\"\n      },\n      \"timezone\": {\n        \"offset\": \"+8:00\",\n        \"description\": \"Beijing, Perth, Singapore, Hong Kong\"\n      }\n    },\n    \"email\": \"aryan.reiten@example.com\"\n  }, {\n    \"_id\": {\n      \"$oid\": \"625b03a9d96d3d6a150ff774\"\n    },\n    \"gender\": \"female\",\n    \"name\": {\n      \"title\": \"Mrs\",\n      \"first\": \"Pauline\",\n      \"last\": \"Girard\"\n    },\n    \"location\": {\n      \"street\": {\n        \"number\": 5600,\n        \"name\": \"Place de L'Europe\"\n      },\n      \"city\": \"Rennes\",\n      \"state\": \"Doubs\",\n      \"country\": \"France\",\n      \"postcode\": 43753,\n      \"coordinates\": {\n        \"latitude\": \"-1.8876\",\n        \"longitude\": \"67.4091\"\n      },\n      \"timezone\": {\n        \"offset\": \"+9:30\",\n        \"description\": \"Adelaide, Darwin\"\n      }\n    },\n    \"email\": \"pauline.girard@example.com\"\n  }]\n};\nconst Refresh2 = createReactClass({\n  displayName: \"Refresh2\",\n  getInitialState: () => {\n    return {\n      showResults: false\n    };\n  },\n  onClick: () => {\n    alert(\"deneme\");\n    this.setState({\n      showResults: this.GetData()\n    });\n  },\n  render: () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Refresh\",\n        onClick: this.refreshData,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this);\n  }\n});\n\nfunction Refresh() {\n  var showResult = false;\n\n  function refreshData(e) {\n    var showResult = Helper.GetData();\n    alert(showResult);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      value: \"Refresh\",\n      onClick: refreshData,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"deneme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Refresh;\n\nfunction Users() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"users\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Users;\nexport default Users; //ReactDOM.render( <Users /> , document.getElementById('container'));\n//module.exports=Users;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Refresh\");\n$RefreshReg$(_c2, \"Users\");","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","ReactDOM","createReactClass","Helper","GetData","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","res","json","result","console","log","Data","Refresh2","getInitialState","showResults","onClick","alert","setState","render","refreshData","Refresh","showResult","e","Users"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom/client';\r\nimport createReactClass from 'create-react-class';\r\n//import $ from 'jquery';\r\n\r\n\r\nconst Helper = {\r\n  GetData: () => {\r\n    fetch('http://localhost:8888/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: `\r\n              {users{\r\n                  name\r\n                  users{\r\n                      name {\r\n                      title\r\n                      first\r\n                      last\r\n                      }\r\n                      gender\r\n                      email\r\n                  }\r\n              }}\r\n          `,\r\n        variables: {\r\n          now: new Date().toISOString(),\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n          console.log(result);\r\n          this.Data=result; \r\n          return true;\r\n          //this.setState({data : result.data}) \r\n      });\r\n      return false;\r\n  },\r\n  Data : [{\r\n    \"_id\": {\r\n      \"$oid\": \"625afe081f03fb9ec79f3567\"\r\n    },\r\n    \"gender\": \"female\",\r\n    \"name\": {\r\n      \"title\": \"Miss\",\r\n      \"first\": \"Bernhardine\",\r\n      \"last\": \"Menne\"\r\n    },\r\n    \"location\": {\r\n      \"street\": {\r\n        \"number\": 1500,\r\n        \"name\": \"Dorfstraße\"\r\n      },\r\n      \"city\": \"Aachen\",\r\n      \"state\": \"Rheinland-Pfalz\",\r\n      \"country\": \"Germany\",\r\n      \"postcode\": 98778,\r\n      \"coordinates\": {\r\n        \"latitude\": \"-40.6541\",\r\n        \"longitude\": \"78.9820\"\r\n      },\r\n      \"timezone\": {\r\n        \"offset\": \"-8:00\",\r\n        \"description\": \"Pacific Time (US & Canada)\"\r\n      }\r\n    },\r\n    \"email\": \"bernhardine.menne@example.com\"\r\n  },{\r\n    \"_id\": {\r\n      \"$oid\": \"625b036cd96d3d6a150ff773\"\r\n    },\r\n    \"gender\": \"male\",\r\n    \"name\": {\r\n      \"title\": \"Mr\",\r\n      \"first\": \"Aryan\",\r\n      \"last\": \"Reiten\"\r\n    },\r\n    \"location\": {\r\n      \"street\": {\r\n        \"number\": 6243,\r\n        \"name\": \"Leirskallhellinga\"\r\n      },\r\n      \"city\": \"Ottersøy\",\r\n      \"state\": \"Nord-Trøndelag\",\r\n      \"country\": \"Norway\",\r\n      \"postcode\": \"7098\",\r\n      \"coordinates\": {\r\n        \"latitude\": \"51.0653\",\r\n        \"longitude\": \"-132.4738\"\r\n      },\r\n      \"timezone\": {\r\n        \"offset\": \"+8:00\",\r\n        \"description\": \"Beijing, Perth, Singapore, Hong Kong\"\r\n      }\r\n    },\r\n    \"email\": \"aryan.reiten@example.com\"\r\n  },{\r\n    \"_id\": {\r\n      \"$oid\": \"625b03a9d96d3d6a150ff774\"\r\n    },\r\n    \"gender\": \"female\",\r\n    \"name\": {\r\n      \"title\": \"Mrs\",\r\n      \"first\": \"Pauline\",\r\n      \"last\": \"Girard\"\r\n    },\r\n    \"location\": {\r\n      \"street\": {\r\n        \"number\": 5600,\r\n        \"name\": \"Place de L'Europe\"\r\n      },\r\n      \"city\": \"Rennes\",\r\n      \"state\": \"Doubs\",\r\n      \"country\": \"France\",\r\n      \"postcode\": 43753,\r\n      \"coordinates\": {\r\n        \"latitude\": \"-1.8876\",\r\n        \"longitude\": \"67.4091\"\r\n      },\r\n      \"timezone\": {\r\n        \"offset\": \"+9:30\",\r\n        \"description\": \"Adelaide, Darwin\"\r\n      }\r\n    },\r\n    \"email\": \"pauline.girard@example.com\"\r\n  }]\r\n}\r\n\r\n\r\n\r\nconst Refresh2 = createReactClass({\r\n  getInitialState: () => {\r\n       return { showResults: false };\r\n  },\r\n  onClick: () => {\r\n    alert(\"deneme\");\r\n    this.setState({ showResults: this.GetData() });\r\n  },\r\n  render: () => {\r\n      return (\r\n          <div>\r\n            <button\r\n              type=\"submit\" \r\n              value=\"Refresh\"\r\n              onClick={this.refreshData}\r\n            >\r\n              Refresh\r\n            </button>\r\n              \r\n          </div>\r\n      );\r\n  }\r\n});\r\n\r\n\r\nfunction Refresh() {\r\n  var showResult = false;\r\n  function refreshData(e) {\r\n    var showResult = Helper.GetData();\r\n    alert(showResult);\r\n  }\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"submit\" \r\n        value=\"Refresh\"\r\n        onClick={refreshData}\r\n      >\r\n        Refresh\r\n      </button>\r\n      { showResult ? <div>deneme</div> : null }\r\n    </div>\r\n);\r\n}\r\n\r\n\r\nfunction Users() {\r\n  return (\r\n    <div>\r\n          <header id=\"users\">\r\n              <div className=\"container\">\r\n                   <Refresh/>\r\n              </div>\r\n          </header>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n\r\n//ReactDOM.render( <Users /> , document.getElementById('container'));\r\n\r\n//module.exports=Users;"]},"metadata":{},"sourceType":"module"}