{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport { React, Component } from 'react';\nimport createReactClass from 'create-react-class'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet jsonData = {};\nconst Helper = {\n  GetData: () => {\n    var returnValue = true;\n    const res = fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                    {users{\n                        name\n                        users{\n                            name {\n                            title\n                            first\n                            last\n                            }\n                            gender\n                            email\n                        }\n                    }}\n                `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => {\n      jsonData = res.json().value;\n      returnValue = true;\n    }).then(result => {\n      //console.log(result.data);\n      jsonData = result;\n      returnValue = true; //this.setState({Data : result.data}) \n    });\n    const myPromise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(res);\n      }, 40000);\n    });\n    myPromise.then(value => {\n      return value;\n    });\n    return returnValue;\n  }\n};\n\nfunction Countries() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\xDClkeler\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Countries;\nexport class Users extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showResult: false\n    };\n  }\n\n  render() {\n    const refreshData = e => {\n      this.setState({\n        showResult: true\n      });\n      alert(this.state.showResult);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"users\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              value: \"Refresh\",\n              onClick: refreshData,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), this.state.showResult ? /*#__PURE__*/_jsxDEV(Countries, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 39\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","Component","createReactClass","jsonData","Helper","GetData","returnValue","res","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","json","value","result","myPromise","Promise","resolve","reject","setTimeout","Countries","Users","state","showResult","render","refreshData","e","setState","alert"],"mappings":";AAAA,SAAQA,KAAR,EAAcC,SAAd,QAA8B,OAA9B;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CACA;;;AAEA,IAAIC,QAAQ,GAAG,EAAf;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,MAAM;AACb,QAAIC,WAAW,GAAC,IAAhB;AACA,UAAMC,GAAG,GAAGC,KAAK,CAAC,+BAAD,EACX;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAdiC;AAenBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADI;AAfQ,OAAf;AALR,KADW,CAAL,CA0BLC,IA1BK,CA0BCZ,GAAD,IAAS;AACbJ,MAAAA,QAAQ,GAAGI,GAAG,CAACa,IAAJ,GAAWC,KAAtB;AACAf,MAAAA,WAAW,GAAG,IAAd;AACD,KA7BK,EA8BLa,IA9BK,CA8BCG,MAAD,IAAY;AACd;AACAnB,MAAAA,QAAQ,GAAGmB,MAAX;AACAhB,MAAAA,WAAW,GAAG,IAAd,CAHc,CAId;AACH,KAnCK,CAAZ;AAqCG,UAAMiB,SAAS,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAChDC,MAAAA,UAAU,CAAC,MAAM;AACfF,QAAAA,OAAO,CAAClB,GAAD,CAAP;AACD,OAFS,EAEP,KAFO,CAAV;AAGD,KAJgB,CAAlB;AAMDgB,IAAAA,SAAS,CAACJ,IAAV,CAAeE,KAAK,IAAE;AAAC,aAAOA,KAAP;AAAa,KAApC;AAEA,WAAOf,WAAP;AACH;AAjDY,CAAf;;AAqDA,SAASsB,SAAT,GAAqB;AACjB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQA,S;AAUT,OAAO,MAAMC,KAAN,SAAoB5B,SAApB,CAA8B;AAAA;AAAA;AAAA,SACnC6B,KADmC,GAC3B;AACNC,MAAAA,UAAU,EAAE;AADN,KAD2B;AAAA;;AAInCC,EAAAA,MAAM,GAAG;AAEP,UAAMC,WAAW,GAAEC,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAG;AAAd,OAAd;AACAK,MAAAA,KAAK,CAAC,KAAKN,KAAL,CAAWC,UAAZ,CAAL;AACD,KAHD;;AAKA,wBACE;AAAA,6BACE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,SAFR;AAGE,cAAA,OAAO,EAAEE,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EASE,KAAKH,KAAL,CAAWC,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,oBAAxB,GAAuC,IATzC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBE;;AA7B+B;AAgCrC,eAAeF,KAAf","sourcesContent":["import {React,Component} from 'react'\r\n\r\nimport createReactClass from 'create-react-class';\r\n//import $ from 'jquery';\r\n\r\nlet jsonData = {};\r\n\r\nconst Helper = {\r\n  GetData: () => {\r\n    var returnValue=true;\r\n    const res = fetch('http://localhost:8888/graphql', \r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              query: `\r\n                    {users{\r\n                        name\r\n                        users{\r\n                            name {\r\n                            title\r\n                            first\r\n                            last\r\n                            }\r\n                            gender\r\n                            email\r\n                        }\r\n                    }}\r\n                `,\r\n              variables: {\r\n                now: new Date().toISOString(),\r\n              },\r\n            })\r\n          })\r\n          .then((res) => {\r\n            jsonData = res.json().value;\r\n            returnValue = true;\r\n          })\r\n          .then((result) => {\r\n              //console.log(result.data);\r\n              jsonData = result;\r\n              returnValue = true;\r\n              //this.setState({Data : result.data}) \r\n          });\r\n\r\n       const myPromise = new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            resolve(res);\r\n          }, 40000);\r\n        });\r\n      \r\n      myPromise.then(value=>{return value});\r\n      \r\n      return returnValue;\r\n  }\r\n}\r\n\r\n\r\nfunction Countries() {\r\n    return (\r\n        <div>\r\n            Ãœlkeler\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport class Users extends Component {\r\n  state = {\r\n    showResult: false,    \r\n  }\r\n  render() {\r\n\r\n    const refreshData=(e) => {\r\n      this.setState({showResult : true})\r\n      alert(this.state.showResult);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <header id=\"users\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-2\">Title</div>\r\n              <button\r\n                type=\"submit\" \r\n                value=\"Refresh\"\r\n                onClick={refreshData}\r\n              >\r\n                Refresh\r\n              </button>\r\n            { this.state.showResult ? <Countries/> : null }\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    )}\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}