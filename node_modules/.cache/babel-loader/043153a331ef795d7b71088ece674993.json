{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport createReactClass from 'create-react-class'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Helper = {\n  GetData: () => {\n    fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n              {users{\n                  name\n                  users{\n                      name {\n                      title\n                      first\n                      last\n                      }\n                      gender\n                      email\n                  }\n              }}\n          `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.Data = result.data;\n      return true; //this.setState({data : result.data}) \n    });\n    return false;\n  },\n  Data: {}\n};\nconst Refresh2 = createReactClass({\n  displayName: \"Refresh2\",\n  getInitialState: () => {\n    return {\n      showResults: false\n    };\n  },\n  onClick: () => {\n    alert(\"deneme\");\n    this.setState({\n      showResults: this.GetData()\n    });\n  },\n  render: () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: \"Refresh\",\n        onClick: this.refreshData,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this);\n  }\n});\n\nfunction Refresh() {\n  var showResult = false;\n\n  function refreshData(e) {\n    alert(\"deneme\");\n    var showResult = Helper.GetData();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      value: \"Refresh\",\n      onClick: refreshData,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), showResult ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Refresh;\n\nfunction Users() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"users\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Users;\nexport default Users; //ReactDOM.render( <Users /> , document.getElementById('container'));\n//module.exports=Users;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Refresh\");\n$RefreshReg$(_c2, \"Users\");","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","ReactDOM","createReactClass","Helper","GetData","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","res","json","result","console","log","Data","data","Refresh2","getInitialState","showResults","onClick","alert","setState","render","refreshData","Refresh","showResult","e","Users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CACA;;;AAGA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,MAAM;AACbC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4B;AAKrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAd2B;AAenBC,QAAAA,SAAS,EAAE;AACTC,UAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADI;AAfQ,OAAf;AAL+B,KAAlC,CAAL,CAyBGC,IAzBH,CAyBSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAzBjB,EA0BGF,IA1BH,CA0BSG,MAAD,IAAY;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,IAAL,GAAUH,MAAM,CAACI,IAAjB;AACA,aAAO,IAAP,CAHc,CAId;AACH,KA/BH;AAgCE,WAAO,KAAP;AACH,GAnCY;AAoCbD,EAAAA,IAAI,EAAG;AApCM,CAAf;AAyCA,MAAME,QAAQ,GAAGtB,gBAAgB,CAAC;AAAA;AAChCuB,EAAAA,eAAe,EAAE,MAAM;AAClB,WAAO;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAP;AACJ,GAH+B;AAIhCC,EAAAA,OAAO,EAAE,MAAM;AACbC,IAAAA,KAAK,CAAC,QAAD,CAAL;AACA,SAAKC,QAAL,CAAc;AAAEH,MAAAA,WAAW,EAAE,KAAKtB,OAAL;AAAf,KAAd;AACD,GAP+B;AAQhC0B,EAAAA,MAAM,EAAE,MAAM;AACV,wBACI;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAE,KAAKC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;AArB+B,CAAD,CAAjC;;AAyBA,SAASC,OAAT,GAAmB;AACjB,MAAIC,UAAU,GAAG,KAAjB;;AACA,WAASF,WAAT,CAAqBG,CAArB,EAAwB;AACtBN,IAAAA,KAAK,CAAC,QAAD,CAAL;AACA,QAAIK,UAAU,GAAG9B,MAAM,CAACC,OAAP,EAAjB;AACD;;AACD,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE2B,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQIE,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA,YAAH,GAAa,IAR3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAlBQD,O;;AAqBT,SAASG,KAAT,GAAiB;AACf,sBACE;AAAA,2BACM;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MAVQA,K;AAYT,eAAeA,KAAf,C,CAEA;AAEA","sourcesContent":["import React from 'react'\r\nimport ReactDOM from 'react-dom/client';\r\nimport createReactClass from 'create-react-class';\r\n//import $ from 'jquery';\r\n\r\n\r\nconst Helper = {\r\n  GetData: () => {\r\n    fetch('http://localhost:8888/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: `\r\n              {users{\r\n                  name\r\n                  users{\r\n                      name {\r\n                      title\r\n                      first\r\n                      last\r\n                      }\r\n                      gender\r\n                      email\r\n                  }\r\n              }}\r\n          `,\r\n        variables: {\r\n          now: new Date().toISOString(),\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n          console.log(result);\r\n          this.Data=result.data; \r\n          return true;\r\n          //this.setState({data : result.data}) \r\n      });\r\n      return false;\r\n  },\r\n  Data : {}\r\n}\r\n\r\n\r\n\r\nconst Refresh2 = createReactClass({\r\n  getInitialState: () => {\r\n       return { showResults: false };\r\n  },\r\n  onClick: () => {\r\n    alert(\"deneme\");\r\n    this.setState({ showResults: this.GetData() });\r\n  },\r\n  render: () => {\r\n      return (\r\n          <div>\r\n            <button\r\n              type=\"submit\" \r\n              value=\"Refresh\"\r\n              onClick={this.refreshData}\r\n            >\r\n              Refresh\r\n            </button>\r\n              \r\n          </div>\r\n      );\r\n  }\r\n});\r\n\r\n\r\nfunction Refresh() {\r\n  var showResult = false;\r\n  function refreshData(e) {\r\n    alert(\"deneme\");\r\n    var showResult = Helper.GetData();\r\n  }\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"submit\" \r\n        value=\"Refresh\"\r\n        onClick={refreshData}\r\n      >\r\n        Refresh\r\n      </button>\r\n      { showResult ? <div /> : null }\r\n    </div>\r\n);\r\n}\r\n\r\n\r\nfunction Users() {\r\n  return (\r\n    <div>\r\n          <header id=\"users\">\r\n              <div className=\"container\">\r\n                   <Refresh/>\r\n              </div>\r\n          </header>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n\r\n//ReactDOM.render( <Users /> , document.getElementById('container'));\r\n\r\n//module.exports=Users;"]},"metadata":{},"sourceType":"module"}