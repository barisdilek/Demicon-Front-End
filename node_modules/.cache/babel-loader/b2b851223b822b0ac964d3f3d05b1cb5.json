{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport { React, Component } from 'react';\nimport './User.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Country extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: props.name,\n      data: props.data\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"country\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: this.state.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this), this.state.data.users.map((user, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-1\",\n              children: user.name.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: user.name.first\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: user.name.last\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-1\",\n              children: user.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 23\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport class Countries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country: \"\",\n      data: {},\n      showList: false\n    };\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  onSelect(e) {\n    this.setState({\n      country: e,\n      showList: true\n    });\n  }\n\n  render() {\n    let countryData = () => {\n      const data = this.props.data.Users.filter(u => u.id === this.state.country).mao;\n      this.setState({\n        data: data\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"countries\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n              title: \"Please select a Country\",\n              id: \"countries\",\n              onSelect: this.onSelect,\n              children: this.props.data.users ? this.props.data.users.map((d, i) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                eventKey: d.name,\n                children: d.name\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)) : \"Countries not loaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), this.state.showList ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(Country, {\n              name: this.state.country,\n              data: this.state.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this);\n  }\n\n}\nexport class Users extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      refreshData: false,\n      data: {},\n      showList: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.refreshData) {\n      this.getData();\n    }\n  }\n\n  getData() {\n    fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                {users{\n                    name\n                    users{\n                        name {\n                        title\n                        first\n                        last\n                        }\n                        gender\n                        email\n                    }\n                }}\n            `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        data: result.data,\n        refreshData: false,\n        showList: true\n      });\n    });\n  }\n\n  render() {\n    const refreshData = e => {\n      this.setState({\n        refreshData: true\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"users\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-11\",\n            children: this.state.showList ? /*#__PURE__*/_jsxDEV(Countries, {\n              data: this.state.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 41\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              value: \"Refresh\",\n              onClick: refreshData,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default Users;","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","Component","DropdownButton","Dropdown","Country","constructor","props","state","country","name","data","render","users","map","user","i","title","first","last","gender","email","Countries","showList","onSelect","bind","e","setState","countryData","Users","filter","u","id","mao","d","refreshData","componentDidMount","getData","componentDidUpdate","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","res","json","result"],"mappings":"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","sourcesContent":["import {React,Component} from 'react'\r\nimport './User.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n//import $ from 'jquery';\r\n\r\nexport class Country extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      country: props.name,\r\n      data: props.data,\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <header id=\"country\">\r\n        <br/>{\"  \"}\r\n        <div className=\"container\">\r\n           <h4>{this.state.country}</h4>\r\n           <div className=\"row\" >\r\n                <div className=\"col-1\">Title</div>\r\n                <div className=\"col-3\">First Name</div>\r\n                <div className=\"col-3\">Last Name</div>\r\n                <div className=\"col-1\">Gender</div>\r\n                <div className=\"col-4\">Email</div>\r\n          </div>\r\n          {this.state.data.users.map((user,i) => {\r\n              return (\r\n                  <div className=\"row\" key={i}>\r\n                      <div className=\"col-1\">{user.name.title}</div>\r\n                      <div className=\"col-3\">{user.name.first}</div>\r\n                      <div className=\"col-3\">{user.name.last}</div>\r\n                      <div className=\"col-1\">{user.gender}</div>\r\n                      <div className=\"col-4\">{user.email}</div>\r\n                  </div>\r\n              )\r\n          })}\r\n        </div>\r\n      </header>\r\n  )}\r\n}\r\n\r\nexport class Countries extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      country: \"\",\r\n      data: {},\r\n      showList: false,     \r\n    };\r\n\r\n    this.onSelect = this.onSelect.bind(this);\r\n  }\r\n\r\n  onSelect (e){\r\n    this.setState({ \r\n      country : e,\r\n      showList: true\r\n    });\r\n  }\r\n  \r\n  render() {\r\n    \r\n    let countryData = () => {\r\n      const data = this.props.data.Users.filter(u => u.id === this.state.country).mao;\r\n      this.setState({ data: data });\r\n    }\r\n\r\n    return (\r\n          \r\n          <header id=\"countries\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <DropdownButton\r\n                      title=\"Please select a Country\"\r\n                      id=\"countries\"\r\n                      onSelect={this.onSelect}\r\n                      >\r\n                        {this.props.data.users\r\n                        ? this.props.data.users.map((d, i) => (\r\n                            <Dropdown.Item key={i} eventKey={d.name}>{d.name}</Dropdown.Item>\r\n                        ))\r\n                        : \"Countries not loaded\"}\r\n                      </DropdownButton>\r\n\r\n                  </div>\r\n                  { \r\n                    this.state.showList ?\r\n                    <div className=\"col-12\">\r\n                        <Country name={this.state.country} data={this.state.data}/>\r\n                    </div>:\r\n                    null\r\n                  }\r\n                </div>\r\n              </div>\r\n            </header>\r\n          \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport class Users extends Component {\r\n  state = {\r\n    refreshData: false,\r\n    data: {},\r\n    showList: false,    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.refreshData)\r\n    { \r\n      this.getData();\r\n    }\r\n  }\r\n  \r\n  getData() {\r\n    fetch('http://localhost:8888/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: `\r\n                {users{\r\n                    name\r\n                    users{\r\n                        name {\r\n                        title\r\n                        first\r\n                        last\r\n                        }\r\n                        gender\r\n                        email\r\n                    }\r\n                }}\r\n            `,\r\n          variables: {\r\n            now: new Date().toISOString(),\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n              data : result.data,\r\n              refreshData:false,\r\n              showList:true\r\n            }) \r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const refreshData=(e) => {\r\n      this.setState({refreshData: true})\r\n    }\r\n\r\n    return (\r\n      \r\n        \r\n        <header id=\"users\">\r\n          <br/>{\"  \"}\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-11\">\r\n                { this.state.showList ? <Countries data={this.state.data}/> : null }\r\n              </div>\r\n              <div className=\"col-1\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\" \r\n                  value=\"Refresh\"\r\n                  onClick={refreshData}\r\n                >\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n    )}\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}