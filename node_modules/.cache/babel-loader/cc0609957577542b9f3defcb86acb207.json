{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './User.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Helper = {\n  GetData: () => {\n    fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n              {users{\n                  name\n                  users{\n                      name {\n                      title\n                      first\n                      last\n                      }\n                      gender\n                      email\n                  }\n              }}\n          `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      this.Data = result.data;\n      return true; //this.setState({data : result.data}) \n    });\n    return false;\n  },\n  Data: {}\n};\nvar Refresh = React.createClass({\n  displayName: \"Refresh\",\n  // mixins: [Helper],\n  // getInitialState: () => {\n  //     return { showResults: false };\n  // },\n  onClick: () => {//this.setState({ showResults: this.GetData() });\n  },\n  render: () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Search\",\n        onClick: this.onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this);\n  }\n});\nvar Countries = React.createClass({\n  displayName: \"Countries\",\n  mixins: [Helper],\n  getInitialState: () => {\n    return {\n      showResults: false,\n      data: {},\n      country: \"\"\n    };\n  },\n  onSelect: e => {\n    this.setState({\n      country: e\n    });\n    this.setState({\n      showResults: this.Data !== null && this.Data !== undefined ? true : false\n    });\n  },\n  componentDidMount: () => {\n    if (this.Data !== null && this.Data !== undefined) {\n      this.setState({\n        data: this.Data\n      });\n    }\n  },\n  render: function () {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n        title: \"Please select a Country\",\n        id: \"countries\",\n        onSelect: this.onSelect,\n        children: this.state.data.users ? this.state.data.users.map((d, i) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          eventKey: 'divCountry' + i,\n          children: d.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)) : \"Countries not loaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), this.state.showResults ? /*#__PURE__*/_jsxDEV(Country, {\n        name: this.state.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 42\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this);\n  }\n});\nvar Country = React.createClass({\n  displayName: \"Country\",\n  mixins: [Helper],\n  getInitialState: () => {\n    return {\n      data: {}\n    };\n  },\n  componentDidMount: () => {\n    if (this.Data !== null && this.Data !== undefined) {\n      var usersOfCOuntry = this.Data.users.filter(x => function (x) {\n        if (x.name === this.props.name) {\n          return x.users;\n        }\n      });\n      console.log(usersOfCOuntry);\n      this.setState({\n        data: usersOfCOuntry\n      });\n    }\n  },\n  render: function () {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-1\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this), this.state.data.users.map((user, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: user.name.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: user.name.first\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: user.name.last\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-1\",\n              children: user.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4\",\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 27\n            }, this)]\n          }, 'divUser' + j, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this);\n  }\n}); // export class Users extends Component {\n//   state = {\n//     data: {}\n//   }\n//   getData() {\n//     fetch('http://localhost:8888/graphql', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           query: `\n//                 {users{\n//                     name\n//                     users{\n//                         name {\n//                         title\n//                         first\n//                         last\n//                         }\n//                         gender\n//                         email\n//                     }\n//                 }}\n//             `,\n//           variables: {\n//             now: new Date().toISOString(),\n//           },\n//         }),\n//       })\n//         .then((res) => res.json())\n//         .then((result) => {\n//             console.log(result);\n//             this.setState({data : result.data}) \n//         });\n//   }\n//   componentDidMount() {\n//     this.getData();\n//   }\n//   render() {\n//     return (\n//       <div>\n//           <header id=\"users\">\n//             <div className=\"container\">\n//                 <br/>{\" \"}\n//                 {this.state.data.users\n//                     ? this.state.data.users.map((d, i) => (\n//                         <div className=\"countries row\" key={'divCountry'+i}>\n//                             <div className=\"container\">\n//                                 <h4>{d.name}</h4>\n//                                 <div className=\"row\">\n//                                     <div className=\"col-2\">Title</div>\n//                                     <div className=\"col-2\">First Name</div>\n//                                     <div className=\"col-3\">Last Name</div>\n//                                     <div className=\"col-1\">Gender</div>\n//                                     <div className=\"col-4\">Email</div>\n//                                 </div>\n//                                 {d.users.map((user,j) => {\n//                                     return (\n//                                         <div className=\"row\" key={'divUser'+i+j}>\n//                                             <div className=\"col-2\">{user.name.title}</div>\n//                                             <div className=\"col-2\">{user.name.first}</div>\n//                                             <div className=\"col-3\">{user.name.last}</div>\n//                                             <div className=\"col-1\">{user.gender}</div>\n//                                             <div className=\"col-4\">{user.email}</div>\n//                                         </div>\n//                                     )\n//                                 })}\n//                             </div>\n//                         </div>\n//                     ))\n//                     : \"loading\"}\n//                 </div>\n//           </header>\n//       </div>\n//     );\n//   }\n// }\n\n_c = Country;\nexport default Users; //ReactDOM.render( <Users /> , document.getElementById('container'));\n//module.exports=Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","Component","ReactDOM","DropdownButton","Dropdown","Helper","GetData","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","res","json","result","console","log","Data","data","Refresh","createClass","onClick","render","Countries","mixins","getInitialState","showResults","country","onSelect","e","setState","undefined","componentDidMount","state","users","map","d","i","name","Country","usersOfCOuntry","filter","x","props","user","j","title","first","last","gender","email","Users"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom/client';\r\nimport './User.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n//import $ from 'jquery';\r\n\r\nvar Helper = {\r\n  GetData: () => {\r\n    fetch('http://localhost:8888/graphql', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        query: `\r\n              {users{\r\n                  name\r\n                  users{\r\n                      name {\r\n                      title\r\n                      first\r\n                      last\r\n                      }\r\n                      gender\r\n                      email\r\n                  }\r\n              }}\r\n          `,\r\n        variables: {\r\n          now: new Date().toISOString(),\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n          console.log(result);\r\n          this.Data=result.data; \r\n          return true;\r\n          //this.setState({data : result.data}) \r\n      });\r\n      return false;\r\n  },\r\n  Data : {}\r\n}\r\n\r\nvar Refresh = React.createClass({\r\n  // mixins: [Helper],\r\n  // getInitialState: () => {\r\n  //     return { showResults: false };\r\n  // },\r\n  onClick: () => {\r\n    //this.setState({ showResults: this.GetData() });\r\n  },\r\n  render: () => {\r\n      return (\r\n          <div>\r\n              <input type=\"submit\" value=\"Search\" onClick={this.onClick} />\r\n              {/* { this.state.showResults ? <Countries /> : null } */}\r\n          </div>\r\n      );\r\n  }\r\n});\r\n\r\nvar Countries = React.createClass({\r\n  mixins: [Helper],\r\n  getInitialState: ()=> {\r\n      return { \r\n        showResults: false,\r\n        data: {},\r\n        country: \"\", \r\n      };\r\n  },\r\n  onSelect: (e)=> {\r\n    this.setState({ country : e });\r\n    this.setState({ showResults: \r\n      this.Data !== null && \r\n      this.Data !== undefined ? true : false\r\n    });\r\n  },\r\n  componentDidMount: ()=>{\r\n    if (\r\n      this.Data !== null && \r\n      this.Data !== undefined \r\n    )\r\n    {\r\n      this.setState({data : this.Data});\r\n    } \r\n  },\r\n  render: function() {\r\n      return (\r\n          \r\n          <div>\r\n              <DropdownButton\r\n                  title=\"Please select a Country\"\r\n                  id=\"countries\"\r\n                  onSelect={this.onSelect}\r\n                  >\r\n                    {this.state.data.users\r\n                    ? this.state.data.users.map((d, i) => (\r\n                        <Dropdown.Item eventKey={'divCountry'+i}>{d.name}</Dropdown.Item>\r\n                    ))\r\n                    : \"Countries not loaded\"}\r\n                </DropdownButton>\r\n              { this.state.showResults ? <Country name={this.state.country}/> : null }\r\n          </div>\r\n      );\r\n  }\r\n});\r\n\r\nvar Country = React.createClass({\r\n  mixins: [Helper],\r\n  getInitialState: ()=> {\r\n      return { \r\n        data: {} \r\n      };\r\n  },\r\n  componentDidMount: ()=>{\r\n    if (\r\n      this.Data !== null && \r\n      this.Data !== undefined \r\n    )\r\n    {\r\n      var usersOfCOuntry = this.Data.users.filter(x => function (x){\r\n        if(x.name === this.props.name)\r\n        {\r\n          return x.users;\r\n        }\r\n      })\r\n      console.log(usersOfCOuntry)\r\n      this.setState({data : usersOfCOuntry});\r\n    } \r\n  },\r\n  render: function() {\r\n      return (\r\n          <div>\r\n            <div className=\"container\">\r\n              <h4>{this.props.name}</h4>\r\n              <div className=\"row\">\r\n                  <div className=\"col-2\">Title</div>\r\n                  <div className=\"col-2\">First Name</div>\r\n                  <div className=\"col-3\">Last Name</div>\r\n                  <div className=\"col-1\">Gender</div>\r\n                  <div className=\"col-4\">Email</div>\r\n              </div>\r\n              {this.state.data.users.map((user,j) => {\r\n                  return (\r\n                      <div className=\"row\" key={'divUser'+j}>\r\n                          <div className=\"col-2\">{user.name.title}</div>\r\n                          <div className=\"col-2\">{user.name.first}</div>\r\n                          <div className=\"col-3\">{user.name.last}</div>\r\n                          <div className=\"col-1\">{user.gender}</div>\r\n                          <div className=\"col-4\">{user.email}</div>\r\n                      </div>\r\n                  )\r\n              })}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n});\r\n\r\n// export class Users extends Component {\r\n  \r\n//   state = {\r\n//     data: {}\r\n//   }\r\n\r\n//   getData() {\r\n//     fetch('http://localhost:8888/graphql', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({\r\n//           query: `\r\n//                 {users{\r\n//                     name\r\n//                     users{\r\n//                         name {\r\n//                         title\r\n//                         first\r\n//                         last\r\n//                         }\r\n//                         gender\r\n//                         email\r\n//                     }\r\n//                 }}\r\n//             `,\r\n//           variables: {\r\n//             now: new Date().toISOString(),\r\n//           },\r\n//         }),\r\n//       })\r\n//         .then((res) => res.json())\r\n//         .then((result) => {\r\n//             console.log(result);\r\n//             this.setState({data : result.data}) \r\n//         });\r\n\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.getData();\r\n//   }\r\n  \r\n//   render() {\r\n    \r\n//     return (\r\n//       <div>\r\n//           <header id=\"users\">\r\n            \r\n//             <div className=\"container\">\r\n//                 <br/>{\" \"}\r\n                \r\n//                 {this.state.data.users\r\n//                     ? this.state.data.users.map((d, i) => (\r\n//                         <div className=\"countries row\" key={'divCountry'+i}>\r\n//                             <div className=\"container\">\r\n//                                 <h4>{d.name}</h4>\r\n//                                 <div className=\"row\">\r\n//                                     <div className=\"col-2\">Title</div>\r\n//                                     <div className=\"col-2\">First Name</div>\r\n//                                     <div className=\"col-3\">Last Name</div>\r\n//                                     <div className=\"col-1\">Gender</div>\r\n//                                     <div className=\"col-4\">Email</div>\r\n//                                 </div>\r\n                            \r\n//                                 {d.users.map((user,j) => {\r\n//                                     return (\r\n//                                         <div className=\"row\" key={'divUser'+i+j}>\r\n//                                             <div className=\"col-2\">{user.name.title}</div>\r\n//                                             <div className=\"col-2\">{user.name.first}</div>\r\n//                                             <div className=\"col-3\">{user.name.last}</div>\r\n//                                             <div className=\"col-1\">{user.gender}</div>\r\n//                                             <div className=\"col-4\">{user.email}</div>\r\n//                                         </div>\r\n//                                     )\r\n//                                 })}\r\n//                             </div>\r\n//                         </div>\r\n//                     ))\r\n//                     : \"loading\"}\r\n                    \r\n//                 </div>\r\n//           </header>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Users;\r\n//ReactDOM.render( <Users /> , document.getElementById('container'));\r\n\r\n//module.exports=Users;"]},"metadata":{},"sourceType":"module"}