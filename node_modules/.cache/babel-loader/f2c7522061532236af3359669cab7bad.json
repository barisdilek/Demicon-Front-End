{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport React from 'react';\nimport createReactClass from 'create-react-class'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet jsonData = {};\nconst Helper = {\n  GetData: () => {\n    var returnValue = false;\n\n    const getAnswer = async () => {\n      const res = await fetch('http://localhost:8888/graphql', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: `\n                                      {users{\n                                          name\n                                          users{\n                                              name {\n                                              title\n                                              first\n                                              last\n                                              }\n                                              gender\n                                              email\n                                          }\n                                      }}\n                                  `,\n          variables: {\n            now: new Date().toISOString()\n          }\n        })\n      });\n      const data = await res.json();\n      jsonData = data;\n      returnValue = true;\n    };\n\n    getAnswer(); // .then((res) => {\n    //   jsonData = res.json().value;\n    //   returnValue = true;\n    // })\n    // .then((result) => {\n    //     //console.log(result.data);\n    //     jsonData = result;\n    //     returnValue = true;\n    //     //this.setState({Data : result.data}) \n    // });\n\n    return returnValue;\n  }\n}; // const Refresh2 = createReactClass({\n//   getInitialState: () => {\n//        return { showResults: false };\n//   },\n//   onClick: () => {\n//     var data = this.GetData();\n//     console.log(data);\n//     this.setState({ showResults: data!=null?true:false });\n//   },\n//   render: () => {\n//       return (\n//           <div>\n//             <button\n//               type=\"submit\" \n//               value=\"Refresh\"\n//               onClick={this.refreshData}\n//             >\n//               Refresh\n//             </button>\n//           </div>\n//       );\n//   }\n// });\n\nfunction Refresh() {\n  var showResult = false;\n\n  function refreshData(e) {\n    showResult = Helper.GetData();\n    console.log(jsonData.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      value: \"Refresh\",\n      onClick: refreshData,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"deneme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Refresh;\n\nfunction Users() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"users\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Refresh, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Users;\nexport default Users; //ReactDOM.render( <Users /> , document.getElementById('container'));\n//module.exports=Users;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Refresh\");\n$RefreshReg$(_c2, \"Users\");","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","createReactClass","jsonData","Helper","GetData","returnValue","getAnswer","res","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","data","json","Refresh","showResult","refreshData","e","console","log","value","Users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CACA;;;AAEA,IAAIC,QAAQ,GAAG,EAAf;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE,MAAM;AACb,QAAIC,WAAW,GAAC,KAAhB;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAAD,EACD;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFX;AAKEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,KAAK,EAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAdmD;AAenBC,UAAAA,SAAS,EAAE;AACTC,YAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AADI;AAfQ,SAAf;AALR,OADC,CAAvB;AA0BA,YAAMC,IAAI,GAAG,MAAMZ,GAAG,CAACa,IAAJ,EAAnB;AACAlB,MAAAA,QAAQ,GAAGiB,IAAX;AACAd,MAAAA,WAAW,GAAC,IAAZ;AACD,KA9BD;;AAgCAC,IAAAA,SAAS,GAlCI,CAmCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACJ,WAAOD,WAAP;AACH;AA/CY,CAAf,C,CAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SAASgB,OAAT,GAAmB;AACjB,MAAIC,UAAU,GAAG,KAAjB;;AACA,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACtBF,IAAAA,UAAU,GAAGnB,MAAM,CAACC,OAAP,EAAb;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAQ,CAACyB,KAArB;AACD;;AACD,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAEJ,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQID,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAuB,IARrC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;KAlBQD,O;;AAqBT,SAASO,KAAT,GAAiB;AACf,sBACE;AAAA,2BACM;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;MAVQA,K;AAYT,eAAeA,KAAf,C,CAEA;AAEA","sourcesContent":["import React from 'react'\r\n\r\nimport createReactClass from 'create-react-class';\r\n//import $ from 'jquery';\r\n\r\nlet jsonData = {};\r\n\r\nconst Helper = {\r\n  GetData: () => {\r\n    var returnValue=false;\r\n    const getAnswer = async () => {\r\n      const res = await fetch('http://localhost:8888/graphql', \r\n                            {\r\n                              method: 'POST',\r\n                              headers: {\r\n                                'Content-Type': 'application/json',\r\n                              },\r\n                              body: JSON.stringify({\r\n                                query: `\r\n                                      {users{\r\n                                          name\r\n                                          users{\r\n                                              name {\r\n                                              title\r\n                                              first\r\n                                              last\r\n                                              }\r\n                                              gender\r\n                                              email\r\n                                          }\r\n                                      }}\r\n                                  `,\r\n                                variables: {\r\n                                  now: new Date().toISOString(),\r\n                                },\r\n                              }),\r\n                            });\r\n      const data = await res.json();\r\n      jsonData = data;\r\n      returnValue=true;\r\n    }\r\n\r\n    getAnswer();\r\n          // .then((res) => {\r\n          //   jsonData = res.json().value;\r\n          //   returnValue = true;\r\n          // })\r\n          // .then((result) => {\r\n          //     //console.log(result.data);\r\n          //     jsonData = result;\r\n          //     returnValue = true;\r\n          //     //this.setState({Data : result.data}) \r\n          // });\r\n      return returnValue;\r\n  }\r\n}\r\n\r\n// const Refresh2 = createReactClass({\r\n//   getInitialState: () => {\r\n//        return { showResults: false };\r\n//   },\r\n//   onClick: () => {\r\n//     var data = this.GetData();\r\n//     console.log(data);\r\n//     this.setState({ showResults: data!=null?true:false });\r\n//   },\r\n//   render: () => {\r\n//       return (\r\n//           <div>\r\n//             <button\r\n//               type=\"submit\" \r\n//               value=\"Refresh\"\r\n//               onClick={this.refreshData}\r\n//             >\r\n//               Refresh\r\n//             </button>\r\n              \r\n//           </div>\r\n//       );\r\n//   }\r\n// });\r\n\r\nfunction Refresh() {\r\n  var showResult = false;\r\n  function refreshData(e) {\r\n    showResult = Helper.GetData();\r\n    console.log(jsonData.value);\r\n  }\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"submit\" \r\n        value=\"Refresh\"\r\n        onClick={refreshData}\r\n      >\r\n        Refresh\r\n      </button>\r\n      { showResult ? <div>deneme</div> : null }\r\n    </div>\r\n);\r\n}\r\n\r\n\r\nfunction Users() {\r\n  return (\r\n    <div>\r\n          <header id=\"users\">\r\n              <div className=\"container\">\r\n                   <Refresh/>\r\n              </div>\r\n          </header>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n\r\n//ReactDOM.render( <Users /> , document.getElementById('container'));\r\n\r\n//module.exports=Users;"]},"metadata":{},"sourceType":"module"}