{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\React\\\\DEMICON\\\\user-app\\\\src\\\\Users.jsx\";\nimport { React, Component } from 'react';\nimport './User.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'; //import $ from 'jquery';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Country extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\xDClke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport class Countries extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      country: null,\n      data: {},\n      showList: false\n    };\n  }\n\n  onSelect(e) {\n    alert(e);\n    this.setState({\n      country: e\n    });\n    const data = this.props.data.Users.filter(u => u.id === this.state.country); // this.setState({ showResults: \n    //   this.Data !== null && \n    //   this.Data !== undefined ? true : false\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"users\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Please select a Country\",\n          id: \"countries\",\n          onSelect: this.onSelect,\n          children: this.props.data.users ? this.props.data.users.map((d, i) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: d.name,\n            children: d.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this)) : \"Countries not loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this);\n  }\n\n}\nexport class Users extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      refreshData: false,\n      data: {},\n      showList: false\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.refreshData) {\n      this.getData();\n    }\n  }\n\n  getData() {\n    fetch('http://localhost:8888/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query: `\n                {users{\n                    name\n                    users{\n                        name {\n                        title\n                        first\n                        last\n                        }\n                        gender\n                        email\n                    }\n                }}\n            `,\n        variables: {\n          now: new Date().toISOString()\n        }\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        data: result.data,\n        refreshData: false,\n        showList: true\n      });\n    });\n  }\n\n  render() {\n    const refreshData = e => {\n      this.setState({\n        refreshData: true\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"header\", {\n        id: \"users\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-10\",\n              children: this.state.showList ? /*#__PURE__*/_jsxDEV(Countries, {\n                data: this.state.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 41\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                type: \"submit\",\n                value: \"Refresh\",\n                onClick: refreshData,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Users;","map":{"version":3,"sources":["C:/repos/React/DEMICON/user-app/src/Users.jsx"],"names":["React","Component","DropdownButton","Dropdown","Country","render","Countries","state","country","data","showList","onSelect","e","alert","setState","props","Users","filter","u","id","users","map","d","i","name","refreshData","componentDidMount","getData","componentDidUpdate","fetch","method","headers","body","JSON","stringify","query","variables","now","Date","toISOString","then","res","json","result"],"mappings":"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","sourcesContent":["import {React,Component} from 'react'\r\nimport './User.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n//import $ from 'jquery';\r\n\r\nexport class Country extends Component {\r\n  render() {\r\n    return (<div>Ãœlke</div>)\r\n  }\r\n}\r\n\r\nexport class Countries extends Component {\r\n  \r\n  state = {\r\n    country: null,\r\n    data: {},\r\n    showList: false,    \r\n  }\r\n\r\n  onSelect (e){\r\n    alert(e);\r\n    this.setState({ country : e });\r\n    const data = this.props.data.Users.filter(u => u.id === this.state.country)\r\n    // this.setState({ showResults: \r\n    //   this.Data !== null && \r\n    //   this.Data !== undefined ? true : false\r\n    // });\r\n  }\r\n  \r\n  render() {\r\n    \r\n  return (\r\n          <div>\r\n            <header id=\"users\">\r\n              <DropdownButton\r\n                title=\"Please select a Country\"\r\n                id=\"countries\"\r\n                onSelect={this.onSelect}\r\n                >\r\n                  {this.props.data.users\r\n                  ? this.props.data.users.map((d, i) => (\r\n                      <Dropdown.Item key={i} eventKey={d.name}>{d.name}</Dropdown.Item>\r\n                  ))\r\n                  : \"Countries not loaded\"}\r\n                </DropdownButton>\r\n            </header>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport class Users extends Component {\r\n  state = {\r\n    refreshData: false,\r\n    data: {},\r\n    showList: false,    \r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n    \r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(this.state.refreshData)\r\n    { \r\n      this.getData();\r\n    }\r\n  }\r\n  \r\n  getData() {\r\n    fetch('http://localhost:8888/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: `\r\n                {users{\r\n                    name\r\n                    users{\r\n                        name {\r\n                        title\r\n                        first\r\n                        last\r\n                        }\r\n                        gender\r\n                        email\r\n                    }\r\n                }}\r\n            `,\r\n          variables: {\r\n            now: new Date().toISOString(),\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n            this.setState({\r\n              data : result.data,\r\n              refreshData:false,\r\n              showList:true\r\n            }) \r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const refreshData=(e) => {\r\n      this.setState({refreshData: true})\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <br/>{\"  \"}\r\n        <header id=\"users\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-10\">\r\n                { this.state.showList ? <Countries data={this.state.data}/> : null }\r\n              </div>\r\n              <div className=\"col-2\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  type=\"submit\" \r\n                  value=\"Refresh\"\r\n                  onClick={refreshData}\r\n                >\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    )}\r\n}\r\n\r\nexport default Users;"]},"metadata":{},"sourceType":"module"}